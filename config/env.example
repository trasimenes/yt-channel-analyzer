# Variables d'environnement pour YouTube Channel Analyzer
# Copiez ce fichier vers .env et remplissez avec vos vraies valeurs

# ===================================
# YT CHANNEL ANALYZER - Configuration
# ===================================

# üîë YOUTUBE API CONFIGURATION
# ===========================
# Obligatoire pour utiliser l'API YouTube officielle
# 1. Aller sur: https://console.cloud.google.com/
# 2. Cr√©er un nouveau projet ou s√©lectionner un projet existant
# 3. Activer l'API "YouTube Data API v3"
# 4. Cr√©er des identifiants ‚Üí Cl√© API
# 5. Copier la cl√© ici (format: AIzaSyC...)
YOUTUBE_API_KEY=AIzaSyC_YOUR_API_KEY_HERE

# üìä QUOTA MONITORING
# ===================
# Limite quotidienne par d√©faut: 10,000 unit√©s
# Co√ªts par op√©ration:
# - search: 100 unit√©s
# - channels: 1 unit√©  
# - videos: 1 unit√©
# - playlistItems: 1 unit√©

# üîê SECURITY (Optionnel)
# =======================
# Cl√© de chiffrement pour les donn√©es sensibles
SECRET_KEY=your-secret-key-here

# üóÉÔ∏è DATABASE (Optionnel)
# =======================
# Par d√©faut: fichiers JSON locaux
# Pour PostgreSQL/MySQL:
# DATABASE_URL=postgresql://user:password@localhost/ytanalyzer

# üöÄ DEPLOYMENT (Production)
# ==========================
# Port de l'application
PORT=8080

# Mode debug (d√©sactiver en production)
DEBUG=True

# Host de l'application
HOST=127.0.0.1

# ‚öôÔ∏è PERFORMANCE SETTINGS
# =======================
# Nombre maximum de vid√©os par analyse
MAX_VIDEOS_PER_ANALYSIS=500

# Timeout pour les requ√™tes API (secondes)
API_TIMEOUT=30

# Cache TTL (Time To Live) en secondes
CACHE_TTL=3600

# üìß NOTIFICATIONS (Optionnel)
# ============================
# Email pour notifications de quota
ALERT_EMAIL=your-email@example.com

# Webhook Discord/Slack pour alertes
WEBHOOK_URL=https://hooks.slack.com/services/...

# üîç LOGGING
# ==========
# Niveau de log: DEBUG, INFO, WARNING, ERROR
LOG_LEVEL=INFO

# Fichier de log
LOG_FILE=yt_analyzer.log

# === AUTHENTIFICATION S√âCURIS√âE ===
# Nom d'utilisateur pour l'acc√®s √† l'application
YTA_USERNAME=votre_nom_utilisateur

# Mot de passe pour l'acc√®s √† l'application
YTA_PASSWORD=votre_mot_de_passe_securise

# Cl√© ma√Ætre pour chiffrer les donn√©es d'authentification (g√©n√©rez une cl√© unique !)
YTA_MASTER_KEY=YOUR_UNIQUE_MASTER_KEY_HERE_CHANGE_ME

# === CONFIGURATION FLASK ===
# Cl√© secr√®te Flask pour les sessions (g√©n√©rez une cl√© unique !)
FLASK_SECRET_KEY=YOUR_FLASK_SECRET_KEY_HERE

# === OPTIONNEL ===
# Mode debug (True/False)
FLASK_DEBUG=False

# === INSTRUCTIONS POUR RENDER ===
# 1. Dans Render, allez dans votre service > Environment
# 2. Ajoutez ces variables une par une
# 3. Ne commitez JAMAIS le fichier .env dans git !
# 4. Utilisez des valeurs fortes pour YTA_MASTER_KEY et FLASK_SECRET_KEY 

# === ANALYSE LOCALE ===
# ======================
# L'analyse se fait maintenant enti√®rement en local
# Pas besoin de tokens API externes



