#!/usr/bin/env python3
"""
Script de test pour diagnostiquer les probl√®mes de l'application
"""

try:
    print("üîç Test 1: Import des modules de base...")
    import os
    import json
    from datetime import datetime
    print("‚úÖ Modules de base OK")

    print("\nüîç Test 2: Import de Flask...")
    from flask import Flask
    print("‚úÖ Flask OK")

    print("\nüîç Test 3: Import SQLAlchemy...")
    from flask_sqlalchemy import SQLAlchemy
    print("‚úÖ SQLAlchemy OK")

    print("\nüîç Test 4: Test de la base de donn√©es...")
    from yt_channel_analyzer.database import get_all_competitors
    competitors = get_all_competitors()
    print(f"‚úÖ Base de donn√©es OK - {len(competitors)} concurrents trouv√©s")

    print("\nüîç Test 5: Import de l'application...")
    # Test d'import sans ex√©cution
    import sys
    if 'app' in sys.modules:
        del sys.modules['app']
    
    import app
    print("‚úÖ Application import√©e avec succ√®s")
    
    print("\nüîç Test 6: V√©rification des routes...")
    routes = []
    for rule in app.app.url_map.iter_rules():
        routes.append(f"{rule.methods} {rule.rule}")
    
    print(f"‚úÖ {len(routes)} routes trouv√©es:")
    for route in sorted(routes)[:10]:  # Afficher les 10 premi√®res
        print(f"   {route}")
    if len(routes) > 10:
        print(f"   ... et {len(routes) - 10} autres")

except ImportError as e:
    print(f"‚ùå Erreur d'import: {e}")
except Exception as e:
    print(f"‚ùå Erreur: {e}")
    import traceback
    traceback.print_exc() 