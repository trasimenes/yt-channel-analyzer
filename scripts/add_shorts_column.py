#!/usr/bin/env python3
"""
Script de migration pour ajouter la colonne is_short √† la table video
"""

import sqlite3
import os
import sys

# Ajouter le r√©pertoire parent au path pour les imports
sys.path.append(os.path.dirname(os.path.dirname(os.path.abspath(__file__))))

from yt_channel_analyzer.database import get_db_connection

def add_shorts_column():
    """Ajouter la colonne is_short √† la table video"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    try:
        # V√©rifier si la colonne existe d√©j√†
        cursor.execute("PRAGMA table_info(video)")
        columns = [column[1] for column in cursor.fetchall()]
        
        if 'is_short' not in columns:
            print("üîÑ Ajout de la colonne is_short √† la table video...")
            cursor.execute('ALTER TABLE video ADD COLUMN is_short BOOLEAN DEFAULT 0')
            
            # Mettre √† jour les vid√©os existantes selon leur dur√©e
            print("üìä Mise √† jour des vid√©os existantes...")
            cursor.execute('''
                UPDATE video 
                SET is_short = 1 
                WHERE duration_seconds <= 60 AND duration_seconds > 0
            ''')
            
            # Compter les shorts d√©tect√©s
            cursor.execute('SELECT COUNT(*) FROM video WHERE is_short = 1')
            shorts_count = cursor.fetchone()[0]
            
            cursor.execute('SELECT COUNT(*) FROM video WHERE is_short = 0')
            regular_count = cursor.fetchone()[0]
            
            conn.commit()
            print(f"‚úÖ Colonne is_short ajout√©e avec succ√®s!")
            print(f"üìπ {shorts_count} Shorts d√©tect√©s (‚â§ 60 secondes)")
            print(f"üé¨ {regular_count} vid√©os classiques")
            
        else:
            print("‚ÑπÔ∏è La colonne is_short existe d√©j√†")
            
    except Exception as e:
        print(f"‚ùå Erreur lors de l'ajout de la colonne: {e}")
        conn.rollback()
    finally:
        conn.close()

if __name__ == "__main__":
    add_shorts_column() 